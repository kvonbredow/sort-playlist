// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get-songinfo.proto

package get_songinfo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InfoRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_get_songinfo_c0692dbd058e3ee7, []int{0}
}
func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (dst *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(dst, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

func (m *InfoRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Features struct {
	Acousticness         float32  `protobuf:"fixed32,1,opt,name=Acousticness" json:"Acousticness,omitempty"`
	AnalysisURL          string   `protobuf:"bytes,2,opt,name=AnalysisURL" json:"AnalysisURL,omitempty"`
	Danceability         float32  `protobuf:"fixed32,3,opt,name=Danceability" json:"Danceability,omitempty"`
	Duration             int64    `protobuf:"varint,4,opt,name=Duration" json:"Duration,omitempty"`
	Energy               float32  `protobuf:"fixed32,5,opt,name=Energy" json:"Energy,omitempty"`
	Instrumentalness     float32  `protobuf:"fixed32,6,opt,name=Instrumentalness" json:"Instrumentalness,omitempty"`
	Key                  int64    `protobuf:"varint,7,opt,name=Key" json:"Key,omitempty"`
	Liveness             float32  `protobuf:"fixed32,8,opt,name=Liveness" json:"Liveness,omitempty"`
	Loudness             float32  `protobuf:"fixed32,9,opt,name=Loudness" json:"Loudness,omitempty"`
	Mode                 int64    `protobuf:"varint,10,opt,name=Mode" json:"Mode,omitempty"`
	Speechiness          float32  `protobuf:"fixed32,11,opt,name=Speechiness" json:"Speechiness,omitempty"`
	Tempo                float32  `protobuf:"fixed32,12,opt,name=Tempo" json:"Tempo,omitempty"`
	TimeSignature        int64    `protobuf:"varint,13,opt,name=TimeSignature" json:"TimeSignature,omitempty"`
	TrackURL             string   `protobuf:"bytes,14,opt,name=TrackURL" json:"TrackURL,omitempty"`
	Valence              float32  `protobuf:"fixed32,15,opt,name=Valence" json:"Valence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Features) Reset()         { *m = Features{} }
func (m *Features) String() string { return proto.CompactTextString(m) }
func (*Features) ProtoMessage()    {}
func (*Features) Descriptor() ([]byte, []int) {
	return fileDescriptor_get_songinfo_c0692dbd058e3ee7, []int{1}
}
func (m *Features) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Features.Unmarshal(m, b)
}
func (m *Features) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Features.Marshal(b, m, deterministic)
}
func (dst *Features) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Features.Merge(dst, src)
}
func (m *Features) XXX_Size() int {
	return xxx_messageInfo_Features.Size(m)
}
func (m *Features) XXX_DiscardUnknown() {
	xxx_messageInfo_Features.DiscardUnknown(m)
}

var xxx_messageInfo_Features proto.InternalMessageInfo

func (m *Features) GetAcousticness() float32 {
	if m != nil {
		return m.Acousticness
	}
	return 0
}

func (m *Features) GetAnalysisURL() string {
	if m != nil {
		return m.AnalysisURL
	}
	return ""
}

func (m *Features) GetDanceability() float32 {
	if m != nil {
		return m.Danceability
	}
	return 0
}

func (m *Features) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Features) GetEnergy() float32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *Features) GetInstrumentalness() float32 {
	if m != nil {
		return m.Instrumentalness
	}
	return 0
}

func (m *Features) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *Features) GetLiveness() float32 {
	if m != nil {
		return m.Liveness
	}
	return 0
}

func (m *Features) GetLoudness() float32 {
	if m != nil {
		return m.Loudness
	}
	return 0
}

func (m *Features) GetMode() int64 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Features) GetSpeechiness() float32 {
	if m != nil {
		return m.Speechiness
	}
	return 0
}

func (m *Features) GetTempo() float32 {
	if m != nil {
		return m.Tempo
	}
	return 0
}

func (m *Features) GetTimeSignature() int64 {
	if m != nil {
		return m.TimeSignature
	}
	return 0
}

func (m *Features) GetTrackURL() string {
	if m != nil {
		return m.TrackURL
	}
	return ""
}

func (m *Features) GetValence() float32 {
	if m != nil {
		return m.Valence
	}
	return 0
}

type InfoResponse struct {
	Afs                  []*Features `protobuf:"bytes,1,rep,name=afs" json:"afs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_get_songinfo_c0692dbd058e3ee7, []int{2}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (dst *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(dst, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetAfs() []*Features {
	if m != nil {
		return m.Afs
	}
	return nil
}

func init() {
	proto.RegisterType((*InfoRequest)(nil), "InfoRequest")
	proto.RegisterType((*Features)(nil), "Features")
	proto.RegisterType((*InfoResponse)(nil), "InfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SongInfoClient is the client API for SongInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SongInfoClient interface {
	GetInfo(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
}

type songInfoClient struct {
	cc *grpc.ClientConn
}

func NewSongInfoClient(cc *grpc.ClientConn) SongInfoClient {
	return &songInfoClient{cc}
}

func (c *songInfoClient) GetInfo(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/SongInfo/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SongInfoServer is the server API for SongInfo service.
type SongInfoServer interface {
	GetInfo(context.Context, *InfoRequest) (*InfoResponse, error)
}

func RegisterSongInfoServer(s *grpc.Server, srv SongInfoServer) {
	s.RegisterService(&_SongInfo_serviceDesc, srv)
}

func _SongInfo_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongInfoServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SongInfo/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongInfoServer).GetInfo(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SongInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SongInfo",
	HandlerType: (*SongInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _SongInfo_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "get-songinfo.proto",
}

func init() { proto.RegisterFile("get-songinfo.proto", fileDescriptor_get_songinfo_c0692dbd058e3ee7) }

var fileDescriptor_get_songinfo_c0692dbd058e3ee7 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x14, 0x24, 0x9b, 0xdd, 0x36, 0x79, 0x49, 0x61, 0x65, 0x21, 0x64, 0x95, 0x03, 0x51, 0xc4, 0x21,
	0x02, 0x91, 0x43, 0xe1, 0x07, 0x2a, 0x15, 0x50, 0x45, 0xb9, 0xa4, 0x85, 0xbb, 0x9b, 0xbe, 0x06,
	0x8b, 0xd4, 0x0e, 0xb1, 0x83, 0x94, 0x1f, 0xe4, 0xbb, 0x90, 0x5f, 0xda, 0x2a, 0xd5, 0xde, 0xde,
	0xcc, 0x78, 0x26, 0xce, 0x3c, 0x03, 0xab, 0xd0, 0x7e, 0x30, 0x5a, 0x55, 0x52, 0x1d, 0x75, 0xde,
	0xb4, 0xda, 0xea, 0xf4, 0x0d, 0x44, 0x6b, 0x75, 0xd4, 0x05, 0xfe, 0xe9, 0xd0, 0x58, 0xf6, 0x08,
	0xbe, 0x3c, 0x18, 0xee, 0x25, 0x7e, 0x16, 0x16, 0x6e, 0x4c, 0xff, 0xf9, 0x10, 0x7c, 0x41, 0x61,
	0xbb, 0x16, 0x0d, 0x4b, 0x21, 0x5e, 0x96, 0xba, 0x33, 0x56, 0x96, 0x0a, 0x8d, 0x3b, 0xe7, 0x65,
	0x77, 0xc5, 0x0d, 0xc7, 0x12, 0x88, 0x96, 0x4a, 0xd4, 0xbd, 0x91, 0xe6, 0x47, 0xb1, 0xe1, 0x77,
	0x89, 0x97, 0x85, 0xc5, 0x98, 0x72, 0x29, 0x2b, 0xa1, 0x4a, 0x14, 0x7b, 0x59, 0x4b, 0xdb, 0x73,
	0x7f, 0x48, 0x19, 0x73, 0x6c, 0x0e, 0xc1, 0xaa, 0x6b, 0x85, 0x95, 0x5a, 0xf1, 0xfb, 0xc4, 0xcb,
	0xfc, 0xe2, 0x8a, 0xd9, 0x2b, 0x98, 0x7c, 0x56, 0xd8, 0x56, 0x3d, 0x7f, 0x20, 0xe7, 0x19, 0xb1,
	0x77, 0xf0, 0xb8, 0x56, 0xc6, 0xb6, 0xdd, 0x09, 0x95, 0x15, 0x35, 0xdd, 0x70, 0x42, 0x27, 0x9e,
	0xf0, 0xee, 0x47, 0xbf, 0x61, 0xcf, 0xa7, 0x14, 0xed, 0x46, 0xf7, 0xc5, 0x8d, 0xfc, 0x8b, 0xe4,
	0x0a, 0xc8, 0x75, 0xc5, 0xa4, 0xe9, 0xee, 0x40, 0x5a, 0x78, 0xd6, 0xce, 0x98, 0x31, 0xb8, 0xff,
	0xae, 0x0f, 0xc8, 0x81, 0xa2, 0x68, 0x76, 0x1d, 0x6c, 0x1b, 0xc4, 0xf2, 0x97, 0x24, 0x4b, 0x44,
	0x96, 0x31, 0xc5, 0x5e, 0xc2, 0xc3, 0x0e, 0x4f, 0x8d, 0xe6, 0x31, 0x69, 0x03, 0x60, 0x6f, 0x61,
	0xb6, 0x93, 0x27, 0xdc, 0xca, 0x4a, 0x51, 0xe3, 0x7c, 0x46, 0xa1, 0xb7, 0xa4, 0xbb, 0xcd, 0xae,
	0x15, 0xe5, 0x6f, 0x57, 0xef, 0x73, 0xaa, 0xf7, 0x8a, 0x19, 0x87, 0xe9, 0x4f, 0x51, 0xa3, 0x2a,
	0x91, 0xbf, 0xa0, 0xe4, 0x0b, 0x4c, 0xdf, 0x43, 0x3c, 0x6c, 0xda, 0x34, 0x5a, 0x19, 0x64, 0xaf,
	0xc1, 0x17, 0xc7, 0x61, 0xd5, 0xd1, 0x22, 0xcc, 0x2f, 0x3b, 0x2e, 0x1c, 0xbb, 0xf8, 0x04, 0xc1,
	0x56, 0xab, 0xca, 0x19, 0x58, 0x06, 0xd3, 0xaf, 0x68, 0x69, 0x8c, 0xf3, 0xd1, 0x63, 0x99, 0xcf,
	0xf2, 0x71, 0x60, 0xfa, 0x6c, 0x3f, 0xa1, 0x37, 0xf5, 0xf1, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf8, 0x4d, 0xb4, 0x8e, 0x69, 0x02, 0x00, 0x00,
}
