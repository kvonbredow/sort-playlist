// Code generated by protoc-gen-go. DO NOT EDIT.
// source: download-pl.proto

package download_pl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PlaylistRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistRequest) Reset()         { *m = PlaylistRequest{} }
func (m *PlaylistRequest) String() string { return proto.CompactTextString(m) }
func (*PlaylistRequest) ProtoMessage()    {}
func (*PlaylistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_download_pl_a014e0c299373f04, []int{0}
}
func (m *PlaylistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistRequest.Unmarshal(m, b)
}
func (m *PlaylistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistRequest.Marshal(b, m, deterministic)
}
func (dst *PlaylistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistRequest.Merge(dst, src)
}
func (m *PlaylistRequest) XXX_Size() int {
	return xxx_messageInfo_PlaylistRequest.Size(m)
}
func (m *PlaylistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistRequest proto.InternalMessageInfo

func (m *PlaylistRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PlaylistResponse struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistResponse) Reset()         { *m = PlaylistResponse{} }
func (m *PlaylistResponse) String() string { return proto.CompactTextString(m) }
func (*PlaylistResponse) ProtoMessage()    {}
func (*PlaylistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_download_pl_a014e0c299373f04, []int{1}
}
func (m *PlaylistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistResponse.Unmarshal(m, b)
}
func (m *PlaylistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistResponse.Marshal(b, m, deterministic)
}
func (dst *PlaylistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistResponse.Merge(dst, src)
}
func (m *PlaylistResponse) XXX_Size() int {
	return xxx_messageInfo_PlaylistResponse.Size(m)
}
func (m *PlaylistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistResponse proto.InternalMessageInfo

func (m *PlaylistResponse) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*PlaylistRequest)(nil), "PlaylistRequest")
	proto.RegisterType((*PlaylistResponse)(nil), "PlaylistResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DownloadPlaylistClient is the client API for DownloadPlaylist service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DownloadPlaylistClient interface {
	GetTracks(ctx context.Context, in *PlaylistRequest, opts ...grpc.CallOption) (*PlaylistResponse, error)
}

type downloadPlaylistClient struct {
	cc *grpc.ClientConn
}

func NewDownloadPlaylistClient(cc *grpc.ClientConn) DownloadPlaylistClient {
	return &downloadPlaylistClient{cc}
}

func (c *downloadPlaylistClient) GetTracks(ctx context.Context, in *PlaylistRequest, opts ...grpc.CallOption) (*PlaylistResponse, error) {
	out := new(PlaylistResponse)
	err := c.cc.Invoke(ctx, "/DownloadPlaylist/GetTracks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DownloadPlaylistServer is the server API for DownloadPlaylist service.
type DownloadPlaylistServer interface {
	GetTracks(context.Context, *PlaylistRequest) (*PlaylistResponse, error)
}

func RegisterDownloadPlaylistServer(s *grpc.Server, srv DownloadPlaylistServer) {
	s.RegisterService(&_DownloadPlaylist_serviceDesc, srv)
}

func _DownloadPlaylist_GetTracks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaylistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownloadPlaylistServer).GetTracks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DownloadPlaylist/GetTracks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownloadPlaylistServer).GetTracks(ctx, req.(*PlaylistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DownloadPlaylist_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DownloadPlaylist",
	HandlerType: (*DownloadPlaylistServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTracks",
			Handler:    _DownloadPlaylist_GetTracks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "download-pl.proto",
}

func init() { proto.RegisterFile("download-pl.proto", fileDescriptor_download_pl_a014e0c299373f04) }

var fileDescriptor_download_pl_a014e0c299373f04 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xc9, 0x2f, 0xcf,
	0xcb, 0xc9, 0x4f, 0x4c, 0xd1, 0x2d, 0xc8, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe4,
	0xe2, 0x0f, 0xc8, 0x49, 0xac, 0xcc, 0xc9, 0x2c, 0x2e, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c,
	0x51, 0x52, 0xe1, 0x12, 0x40, 0x28, 0x29, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12, 0xe0, 0x62,
	0xce, 0x4c, 0x29, 0x96, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x0c, 0x02, 0x31, 0x8d, 0xdc, 0xb8, 0x04,
	0x5c, 0xa0, 0xa6, 0xc3, 0x54, 0x0b, 0x19, 0x71, 0x71, 0xba, 0xa7, 0x96, 0x84, 0x14, 0x25, 0x26,
	0x67, 0x17, 0x0b, 0x09, 0xe8, 0xa1, 0x59, 0x24, 0x25, 0xa8, 0x87, 0x6e, 0xae, 0x12, 0x43, 0x12,
	0x1b, 0xd8, 0x5d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0xc3, 0x57, 0xce, 0xac, 0x00,
	0x00, 0x00,
}
